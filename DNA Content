
#include <iostream>
#include <fstream>

using namespace std;
void initialize(int& lc, int list[]);
void characterCount(char ch, int list[]);
void copyText(ifstream& intext, ofstream& outtext, char& ch, int list[]);
void writeTotal(ofstream& outtext, int lc, int list[]);

int main()
{
    int lineCount;
    int letterCount[26];
	char ch;
    ifstream infile; 
    ofstream outfile; 
	char textout;
    infile.open("textin.txt");                   
    if (!infile)                     
    {
        cout << "Cannot open the input file." 
             << endl;
        return 1;
    }
    outfile.open("textout.out");                  
    initialize(lineCount, letterCount);           
    infile.get(ch);                              
    while (infile)                             
    {
        copyText(infile, outfile, ch, letterCount); 
        lineCount++;                                
        infile.get(ch);                          
    }
	
    writeTotal(outfile, lineCount, letterCount);   
    infile.close();                                 
    outfile.close();                           
	
	return 0;
}
void initialize(int& lc, int list[])
{
	int j;
	lc = 0;

	for (j = 0; j < 26; j++)
		list[j] = 0;
} 
void characterCount(char ch, int list[])
{
    int index;
    ch = toupper(ch);                   
    index = static_cast<int>(ch) - static_cast<int>('A');    
    if (0 <= index && index < 26)        
        list[index]++;
} 
void copyText(ifstream& intext, ofstream& outtext, char& ch,
              int list[])
{
	while (ch != '\n')   
	{
        characterCount(ch, list);   
        intext.get(ch);    
    }
	outtext << ch;
} 
void writeTotal(ofstream& outtext, int lc, int list[])
{   
	int index;
	outtext << endl ;
    for (index = 0; index < 26; index++)
        outtext << static_cast<char>(index + static_cast<int>('A'))
                << " count = " << list[index] << endl;
	outtext << '\n' << "Total number of lines: " << lc << endl;
	outtext << "Total A,T,G,C: " << (list[0] + list[2] + list[6] + list[19]) << '\n';
	outtext << "A: " << 100*list[0] / (list[0] + list[2] + list[6] + list[19]) << "%" << '\n';
	outtext << "T: " << 100*list[19] / (list[0] + list[2] + list[6] + list[19]) << "%" << '\n';
	outtext << "G: " << 100*list[6] / (list[0] + list[2] + list[6] + list[19]) << "%" << '\n';
	outtext << "C: " << 100*list[2] / (list[0] + list[2] + list[6] + list[19]) << "%" << '\n';
} 


// Reference: D.S. Malik
